{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport axios from 'axios';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nvar api = axios.create({\n  baseURL: 'http://localhost:3000/api',\n  timeout: 10000\n});\napi.interceptors.request.use(function () {\n  var _ref = _asyncToGenerator(function* (config) {\n    try {\n      var token = yield AsyncStorage.getItem('@auth_token');\n      if (token) {\n        config.headers.Authorization = `Bearer ${token}`;\n      }\n      return config;\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  });\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}());\napi.interceptors.response.use(function (response) {\n  return response;\n}, function () {\n  var _ref2 = _asyncToGenerator(function* (error) {\n    var _error$response;\n    if (((_error$response = error.response) == null ? void 0 : _error$response.status) === 401) {\n      yield AsyncStorage.removeItem('@auth_token');\n    }\n    return Promise.reject(error);\n  });\n  return function (_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}());\nexport default api;","map":{"version":3,"names":["axios","AsyncStorage","api","create","baseURL","timeout","interceptors","request","use","_ref","_asyncToGenerator","config","token","getItem","headers","Authorization","error","Promise","reject","_x","apply","arguments","response","_ref2","_error$response","status","removeItem","_x2"],"sources":["/Users/cassioreistrindade/kbc2/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst api = axios.create({\n  baseURL: 'http://localhost:3000/api',\n  timeout: 10000,\n});\n\napi.interceptors.request.use(async (config) => {\n  try {\n    const token = await AsyncStorage.getItem('@auth_token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n});\n\napi.interceptors.response.use(\n  (response) => response,\n  async (error) => {\n    if (error.response?.status === 401) {\n      // Handle unauthorized error (e.g., redirect to login)\n      await AsyncStorage.removeItem('@auth_token');\n      // You might want to add navigation to login screen here\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport default api;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,2CAA2C;AAEpE,IAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAE,2BAA2B;EACpCC,OAAO,EAAE;AACX,CAAC,CAAC;AAEFH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAC,WAAOC,MAAM,EAAK;IAC7C,IAAI;MACF,IAAMC,KAAK,SAASX,YAAY,CAACY,OAAO,CAAC,aAAa,CAAC;MACvD,IAAID,KAAK,EAAE;QACTD,MAAM,CAACG,OAAO,CAACC,aAAa,GAAG,UAAUH,KAAK,EAAE;MAClD;MACA,OAAOD,MAAM;IACf,CAAC,CAAC,OAAOK,KAAK,EAAE;MACd,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;IAC9B;EACF,CAAC;EAAA,iBAAAG,EAAA;IAAA,OAAAV,IAAA,CAAAW,KAAA,OAAAC,SAAA;EAAA;AAAA,IAAC;AAEFnB,GAAG,CAACI,YAAY,CAACgB,QAAQ,CAACd,GAAG,CAC3B,UAACc,QAAQ;EAAA,OAAKA,QAAQ;AAAA;EAAA,IAAAC,KAAA,GAAAb,iBAAA,CACtB,WAAOM,KAAK,EAAK;IAAA,IAAAQ,eAAA;IACf,IAAI,EAAAA,eAAA,GAAAR,KAAK,CAACM,QAAQ,qBAAdE,eAAA,CAAgBC,MAAM,MAAK,GAAG,EAAE;MAElC,MAAMxB,YAAY,CAACyB,UAAU,CAAC,aAAa,CAAC;IAE9C;IACA,OAAOT,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;EAC9B,CAAC;EAAA,iBAAAW,GAAA;IAAA,OAAAJ,KAAA,CAAAH,KAAA,OAAAC,SAAA;EAAA;AAAA,GACH,CAAC;AAED,eAAenB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}