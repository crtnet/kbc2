{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useState, useEffect } from 'react';\nimport { logger } from \"../utils/logger\";\nexport var useAsyncStorage = function useAsyncStorage(key, initialValue) {\n  var _useState = useState(initialValue),\n    _useState2 = _slicedToArray(_useState, 2),\n    storedValue = _useState2[0],\n    setStoredValue = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isLoading = _useState4[0],\n    setIsLoading = _useState4[1];\n  useEffect(function () {\n    var loadStoredValue = function () {\n      var _ref = _asyncToGenerator(function* () {\n        try {\n          var item = yield AsyncStorage.getItem(key);\n          if (item) {\n            var parsedItem = JSON.parse(item);\n            setStoredValue(parsedItem);\n            logger.info(`Loaded value for key ${key}`, {\n              value: parsedItem\n            });\n          }\n        } catch (error) {\n          logger.error(`Error loading value for key ${key}`, error);\n        } finally {\n          setIsLoading(false);\n        }\n      });\n      return function loadStoredValue() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    loadStoredValue();\n  }, [key]);\n  var setValue = function () {\n    var _ref2 = _asyncToGenerator(function* (value) {\n      try {\n        var valueToStore = value instanceof Function ? value(storedValue) : value;\n        setStoredValue(valueToStore);\n        yield AsyncStorage.setItem(key, JSON.stringify(valueToStore));\n        logger.info(`Stored value for key ${key}`, {\n          value: valueToStore\n        });\n      } catch (error) {\n        logger.error(`Error storing value for key ${key}`, error);\n      }\n    });\n    return function setValue(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var removeValue = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        yield AsyncStorage.removeItem(key);\n        setStoredValue(undefined);\n        logger.info(`Removed value for key ${key}`);\n      } catch (error) {\n        logger.error(`Error removing value for key ${key}`, error);\n      }\n    });\n    return function removeValue() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return {\n    storedValue: storedValue,\n    setValue: setValue,\n    removeValue: removeValue,\n    isLoading: isLoading\n  };\n};","map":{"version":3,"names":["AsyncStorage","useState","useEffect","logger","useAsyncStorage","key","initialValue","_useState","_useState2","_slicedToArray","storedValue","setStoredValue","_useState3","_useState4","isLoading","setIsLoading","loadStoredValue","_ref","_asyncToGenerator","item","getItem","parsedItem","JSON","parse","info","value","error","apply","arguments","setValue","_ref2","valueToStore","Function","setItem","stringify","_x","removeValue","_ref3","removeItem","undefined"],"sources":["/Users/cassioreistrindade/kbc2/frontend/src/hooks/useAsyncStorage.ts"],"sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useState, useEffect } from 'react';\nimport { logger } from '../utils/logger';\n\nexport const useAsyncStorage = <T>(key: string, initialValue?: T) => {\n  const [storedValue, setStoredValue] = useState<T | undefined>(initialValue);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const loadStoredValue = async () => {\n      try {\n        const item = await AsyncStorage.getItem(key);\n        if (item) {\n          const parsedItem = JSON.parse(item);\n          setStoredValue(parsedItem);\n          logger.info(`Loaded value for key ${key}`, { value: parsedItem });\n        }\n      } catch (error) {\n        logger.error(`Error loading value for key ${key}`, error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    loadStoredValue();\n  }, [key]);\n\n  const setValue = async (value: T) => {\n    try {\n      const valueToStore = value instanceof Function ? value(storedValue) : value;\n      setStoredValue(valueToStore);\n      await AsyncStorage.setItem(key, JSON.stringify(valueToStore));\n      logger.info(`Stored value for key ${key}`, { value: valueToStore });\n    } catch (error) {\n      logger.error(`Error storing value for key ${key}`, error);\n    }\n  };\n\n  const removeValue = async () => {\n    try {\n      await AsyncStorage.removeItem(key);\n      setStoredValue(undefined);\n      logger.info(`Removed value for key ${key}`);\n    } catch (error) {\n      logger.error(`Error removing value for key ${key}`, error);\n    }\n  };\n\n  return {\n    storedValue,\n    setValue,\n    removeValue,\n    isLoading,\n  };\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}