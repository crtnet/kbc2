{"ast":null,"code":"import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { useAuth } from \"../contexts/AuthContext\";\nimport LoginScreen from \"../screens/LoginScreen\";\nimport HomeScreen from \"../screens/HomeScreen\";\nimport RegisterScreen from \"../screens/RegisterScreen\";\nimport CreateBookScreen from \"../screens/CreateBookScreen\";\nimport ViewBookScreen from \"../screens/ViewBookScreen\";\nimport ViewBookPDFScreen from \"../screens/ViewBookPDFScreen\";\nimport { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar AppNavigator = function AppNavigator() {\n  var _useAuth = useAuth(),\n    signed = _useAuth.signed,\n    loading = _useAuth.loading;\n  if (loading) {\n    return null;\n  }\n  return _jsx(NavigationContainer, {\n    children: _jsx(Stack.Navigator, {\n      screenOptions: {\n        headerShown: false,\n        cardStyle: {\n          backgroundColor: '#fff'\n        },\n        gestureEnabled: true,\n        gestureDirection: 'horizontal'\n      },\n      children: !signed ? _jsxs(_Fragment, {\n        children: [_jsx(Stack.Screen, {\n          name: \"Login\",\n          component: LoginScreen,\n          options: {\n            animationTypeForReplace: signed ? 'push' : 'pop'\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Register\",\n          component: RegisterScreen\n        })]\n      }) : _jsxs(_Fragment, {\n        children: [_jsx(Stack.Screen, {\n          name: \"Home\",\n          component: HomeScreen,\n          options: {\n            animationEnabled: true\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"CreateBook\",\n          component: CreateBookScreen,\n          options: {\n            headerShown: true,\n            headerTitle: 'Criar Novo Livro',\n            headerBackTitleVisible: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"ViewBook\",\n          component: ViewBookScreen,\n          options: {\n            headerShown: true,\n            headerTitle: 'Visualizar Livro',\n            headerBackTitleVisible: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"ViewBookPDF\",\n          component: ViewBookPDFScreen,\n          options: {\n            headerShown: true,\n            headerTitle: 'PDF do Livro',\n            headerBackTitleVisible: false\n          }\n        })]\n      })\n    })\n  });\n};\nexport default AppNavigator;","map":{"version":3,"names":["React","NavigationContainer","createStackNavigator","useAuth","LoginScreen","HomeScreen","RegisterScreen","CreateBookScreen","ViewBookScreen","ViewBookPDFScreen","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Stack","AppNavigator","_useAuth","signed","loading","children","Navigator","screenOptions","headerShown","cardStyle","backgroundColor","gestureEnabled","gestureDirection","Screen","name","component","options","animationTypeForReplace","animationEnabled","headerTitle","headerBackTitleVisible"],"sources":["/Users/cassioreistrindade/kbc2/frontend/src/navigation/AppNavigator.tsx"],"sourcesContent":["import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { useAuth } from '../contexts/AuthContext';\nimport LoginScreen from '../screens/LoginScreen';\nimport HomeScreen from '../screens/HomeScreen';\nimport RegisterScreen from '../screens/RegisterScreen';\nimport CreateBookScreen from '../screens/CreateBookScreen';\nimport ViewBookScreen from '../screens/ViewBookScreen';\nimport ViewBookPDFScreen from '../screens/ViewBookPDFScreen';\n\nexport type RootStackParamList = {\n  Login: undefined;\n  Register: undefined;\n  Home: undefined;\n  CreateBook: undefined;\n  ViewBook: { bookId: string };\n  ViewBookPDF: { bookId: string };\n};\n\nconst Stack = createStackNavigator<RootStackParamList>();\n\nconst AppNavigator = () => {\n  const { signed, loading } = useAuth();\n\n  if (loading) {\n    return null; // ou um componente de loading\n  }\n\n  return (\n    <NavigationContainer>\n      <Stack.Navigator\n        screenOptions={{\n          headerShown: false,\n          cardStyle: { backgroundColor: '#fff' },\n          gestureEnabled: true,\n          gestureDirection: 'horizontal',\n        }}\n      >\n        {!signed ? (\n          <>\n            <Stack.Screen \n              name=\"Login\" \n              component={LoginScreen}\n              options={{\n                animationTypeForReplace: signed ? 'push' : 'pop',\n              }}\n            />\n            <Stack.Screen \n              name=\"Register\" \n              component={RegisterScreen}\n            />\n          </>\n        ) : (\n          <>\n            <Stack.Screen \n              name=\"Home\" \n              component={HomeScreen}\n              options={{\n                animationEnabled: true,\n              }}\n            />\n            <Stack.Screen \n              name=\"CreateBook\" \n              component={CreateBookScreen}\n              options={{\n                headerShown: true,\n                headerTitle: 'Criar Novo Livro',\n                headerBackTitleVisible: false,\n              }}\n            />\n            <Stack.Screen \n              name=\"ViewBook\" \n              component={ViewBookScreen}\n              options={{\n                headerShown: true,\n                headerTitle: 'Visualizar Livro',\n                headerBackTitleVisible: false,\n              }}\n            />\n            <Stack.Screen \n              name=\"ViewBookPDF\" \n              component={ViewBookPDFScreen}\n              options={{\n                headerShown: true,\n                headerTitle: 'PDF do Livro',\n                headerBackTitleVisible: false,\n              }}\n            />\n          </>\n        )}\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n};\n\nexport default AppNavigator;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,SAASC,OAAO;AAChB,OAAOC,WAAW;AAClB,OAAOC,UAAU;AACjB,OAAOC,cAAc;AACrB,OAAOC,gBAAgB;AACvB,OAAOC,cAAc;AACrB,OAAOC,iBAAiB;AAAqC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,QAAA,IAAAC,SAAA,EAAAC,IAAA,IAAAC,KAAA;AAW7D,IAAMC,KAAK,GAAGd,oBAAoB,CAAqB,CAAC;AAExD,IAAMe,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;EACzB,IAAAC,QAAA,GAA4Bf,OAAO,CAAC,CAAC;IAA7BgB,MAAM,GAAAD,QAAA,CAANC,MAAM;IAAEC,OAAO,GAAAF,QAAA,CAAPE,OAAO;EAEvB,IAAIA,OAAO,EAAE;IACX,OAAO,IAAI;EACb;EAEA,OACET,IAAA,CAACV,mBAAmB;IAAAoB,QAAA,EAClBV,IAAA,CAACK,KAAK,CAACM,SAAS;MACdC,aAAa,EAAE;QACbC,WAAW,EAAE,KAAK;QAClBC,SAAS,EAAE;UAAEC,eAAe,EAAE;QAAO,CAAC;QACtCC,cAAc,EAAE,IAAI;QACpBC,gBAAgB,EAAE;MACpB,CAAE;MAAAP,QAAA,EAED,CAACF,MAAM,GACNJ,KAAA,CAAAF,SAAA;QAAAQ,QAAA,GACEV,IAAA,CAACK,KAAK,CAACa,MAAM;UACXC,IAAI,EAAC,OAAO;UACZC,SAAS,EAAE3B,WAAY;UACvB4B,OAAO,EAAE;YACPC,uBAAuB,EAAEd,MAAM,GAAG,MAAM,GAAG;UAC7C;QAAE,CACH,CAAC,EACFR,IAAA,CAACK,KAAK,CAACa,MAAM;UACXC,IAAI,EAAC,UAAU;UACfC,SAAS,EAAEzB;QAAe,CAC3B,CAAC;MAAA,CACF,CAAC,GAEHS,KAAA,CAAAF,SAAA;QAAAQ,QAAA,GACEV,IAAA,CAACK,KAAK,CAACa,MAAM;UACXC,IAAI,EAAC,MAAM;UACXC,SAAS,EAAE1B,UAAW;UACtB2B,OAAO,EAAE;YACPE,gBAAgB,EAAE;UACpB;QAAE,CACH,CAAC,EACFvB,IAAA,CAACK,KAAK,CAACa,MAAM;UACXC,IAAI,EAAC,YAAY;UACjBC,SAAS,EAAExB,gBAAiB;UAC5ByB,OAAO,EAAE;YACPR,WAAW,EAAE,IAAI;YACjBW,WAAW,EAAE,kBAAkB;YAC/BC,sBAAsB,EAAE;UAC1B;QAAE,CACH,CAAC,EACFzB,IAAA,CAACK,KAAK,CAACa,MAAM;UACXC,IAAI,EAAC,UAAU;UACfC,SAAS,EAAEvB,cAAe;UAC1BwB,OAAO,EAAE;YACPR,WAAW,EAAE,IAAI;YACjBW,WAAW,EAAE,kBAAkB;YAC/BC,sBAAsB,EAAE;UAC1B;QAAE,CACH,CAAC,EACFzB,IAAA,CAACK,KAAK,CAACa,MAAM;UACXC,IAAI,EAAC,aAAa;UAClBC,SAAS,EAAEtB,iBAAkB;UAC7BuB,OAAO,EAAE;YACPR,WAAW,EAAE,IAAI;YACjBW,WAAW,EAAE,cAAc;YAC3BC,sBAAsB,EAAE;UAC1B;QAAE,CACH,CAAC;MAAA,CACF;IACH,CACc;EAAC,CACC,CAAC;AAE1B,CAAC;AAED,eAAenB,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}