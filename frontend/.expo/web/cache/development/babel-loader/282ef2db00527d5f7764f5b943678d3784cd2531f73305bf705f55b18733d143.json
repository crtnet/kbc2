{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { useNavigation } from '@react-navigation/native';\nimport api from \"../services/api\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function RegisterScreen() {\n  var navigation = useNavigation();\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    name = _useState2[0],\n    setName = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    email = _useState4[0],\n    setEmail = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    password = _useState6[0],\n    setPassword = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    confirmPassword = _useState8[0],\n    setConfirmPassword = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    loading = _useState10[0],\n    setLoading = _useState10[1];\n  var handleRegister = function () {\n    var _ref = _asyncToGenerator(function* () {\n      if (!name || !email || !password || !confirmPassword) {\n        Alert.alert('Erro', 'Por favor, preencha todos os campos');\n        return;\n      }\n      if (password !== confirmPassword) {\n        Alert.alert('Erro', 'As senhas não coincidem');\n        return;\n      }\n      try {\n        setLoading(true);\n        yield api.post('/auth/register', {\n          name: name,\n          email: email,\n          password: password\n        });\n        Alert.alert('Sucesso', 'Cadastro realizado com sucesso!', [{\n          text: 'OK',\n          onPress: function onPress() {\n            return navigation.navigate('Login');\n          }\n        }]);\n      } catch (error) {\n        var _error$response, _error$response$data;\n        Alert.alert('Erro', ((_error$response = error.response) == null ? void 0 : (_error$response$data = _error$response.data) == null ? void 0 : _error$response$data.message) || 'Ocorreu um erro ao realizar o cadastro');\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function handleRegister() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsx(KeyboardAvoidingView, {\n    behavior: Platform.OS === 'ios' ? 'padding' : 'height',\n    style: styles.container,\n    children: _jsx(ScrollView, {\n      contentContainerStyle: styles.scrollContent,\n      children: _jsxs(View, {\n        style: styles.content,\n        children: [_jsx(Text, {\n          style: styles.title,\n          children: \"Criar Conta\"\n        }), _jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Nome completo\",\n          value: name,\n          onChangeText: setName,\n          autoCapitalize: \"words\",\n          editable: !loading\n        }), _jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"E-mail\",\n          value: email,\n          onChangeText: setEmail,\n          keyboardType: \"email-address\",\n          autoCapitalize: \"none\",\n          editable: !loading\n        }), _jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Senha\",\n          value: password,\n          onChangeText: setPassword,\n          secureTextEntry: true,\n          editable: !loading\n        }), _jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Confirmar senha\",\n          value: confirmPassword,\n          onChangeText: setConfirmPassword,\n          secureTextEntry: true,\n          editable: !loading\n        }), _jsx(TouchableOpacity, {\n          style: [styles.button, loading && styles.buttonDisabled],\n          onPress: handleRegister,\n          disabled: loading,\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: loading ? 'Cadastrando...' : 'Cadastrar'\n          })\n        }), _jsx(TouchableOpacity, {\n          style: styles.loginButton,\n          onPress: function onPress() {\n            return navigation.navigate('Login');\n          },\n          disabled: loading,\n          children: _jsx(Text, {\n            style: styles.loginText,\n            children: \"J\\xE1 tem uma conta? Fa\\xE7a login\"\n          })\n        })]\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5'\n  },\n  scrollContent: {\n    flexGrow: 1\n  },\n  content: {\n    flex: 1,\n    padding: 24,\n    justifyContent: 'center'\n  },\n  title: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    marginBottom: 32,\n    textAlign: 'center',\n    color: '#007bff'\n  },\n  input: {\n    backgroundColor: 'white',\n    borderWidth: 1,\n    borderColor: '#ddd',\n    borderRadius: 8,\n    padding: 16,\n    marginBottom: 16,\n    fontSize: 16\n  },\n  button: {\n    backgroundColor: '#007bff',\n    padding: 16,\n    borderRadius: 8,\n    alignItems: 'center',\n    marginTop: 16\n  },\n  buttonDisabled: {\n    backgroundColor: '#ccc'\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  loginButton: {\n    marginTop: 16,\n    padding: 8\n  },\n  loginText: {\n    color: '#007bff',\n    fontSize: 14,\n    textAlign: 'center'\n  }\n});","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","StyleSheet","Alert","KeyboardAvoidingView","Platform","ScrollView","useNavigation","api","jsx","_jsx","jsxs","_jsxs","RegisterScreen","navigation","_useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","_useState7","_useState8","confirmPassword","setConfirmPassword","_useState9","_useState10","loading","setLoading","handleRegister","_ref","_asyncToGenerator","alert","post","text","onPress","navigate","error","_error$response","_error$response$data","response","data","message","apply","arguments","behavior","OS","style","styles","container","children","contentContainerStyle","scrollContent","content","title","input","placeholder","value","onChangeText","autoCapitalize","editable","keyboardType","secureTextEntry","button","buttonDisabled","disabled","buttonText","loginButton","loginText","create","flex","backgroundColor","flexGrow","padding","justifyContent","fontSize","fontWeight","marginBottom","textAlign","color","borderWidth","borderColor","borderRadius","alignItems","marginTop"],"sources":["/Users/cassioreistrindade/kbc2/frontend/src/screens/RegisterScreen.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  View,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  StyleSheet,\n  Alert,\n  KeyboardAvoidingView,\n  Platform,\n  ScrollView\n} from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport api from '../services/api';\n\nexport default function RegisterScreen() {\n  const navigation = useNavigation();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const handleRegister = async () => {\n    if (!name || !email || !password || !confirmPassword) {\n      Alert.alert('Erro', 'Por favor, preencha todos os campos');\n      return;\n    }\n\n    if (password !== confirmPassword) {\n      Alert.alert('Erro', 'As senhas não coincidem');\n      return;\n    }\n\n    try {\n      setLoading(true);\n      await api.post('/auth/register', {\n        name,\n        email,\n        password\n      });\n\n      Alert.alert(\n        'Sucesso',\n        'Cadastro realizado com sucesso!',\n        [\n          {\n            text: 'OK',\n            onPress: () => navigation.navigate('Login')\n          }\n        ]\n      );\n    } catch (error) {\n      Alert.alert(\n        'Erro',\n        error.response?.data?.message || 'Ocorreu um erro ao realizar o cadastro'\n      );\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <KeyboardAvoidingView\n      behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\n      style={styles.container}\n    >\n      <ScrollView contentContainerStyle={styles.scrollContent}>\n        <View style={styles.content}>\n          <Text style={styles.title}>Criar Conta</Text>\n          \n          <TextInput\n            style={styles.input}\n            placeholder=\"Nome completo\"\n            value={name}\n            onChangeText={setName}\n            autoCapitalize=\"words\"\n            editable={!loading}\n          />\n\n          <TextInput\n            style={styles.input}\n            placeholder=\"E-mail\"\n            value={email}\n            onChangeText={setEmail}\n            keyboardType=\"email-address\"\n            autoCapitalize=\"none\"\n            editable={!loading}\n          />\n\n          <TextInput\n            style={styles.input}\n            placeholder=\"Senha\"\n            value={password}\n            onChangeText={setPassword}\n            secureTextEntry\n            editable={!loading}\n          />\n\n          <TextInput\n            style={styles.input}\n            placeholder=\"Confirmar senha\"\n            value={confirmPassword}\n            onChangeText={setConfirmPassword}\n            secureTextEntry\n            editable={!loading}\n          />\n\n          <TouchableOpacity\n            style={[styles.button, loading && styles.buttonDisabled]}\n            onPress={handleRegister}\n            disabled={loading}\n          >\n            <Text style={styles.buttonText}>\n              {loading ? 'Cadastrando...' : 'Cadastrar'}\n            </Text>\n          </TouchableOpacity>\n\n          <TouchableOpacity\n            style={styles.loginButton}\n            onPress={() => navigation.navigate('Login')}\n            disabled={loading}\n          >\n            <Text style={styles.loginText}>\n              Já tem uma conta? Faça login\n            </Text>\n          </TouchableOpacity>\n        </View>\n      </ScrollView>\n    </KeyboardAvoidingView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5'\n  },\n  scrollContent: {\n    flexGrow: 1\n  },\n  content: {\n    flex: 1,\n    padding: 24,\n    justifyContent: 'center'\n  },\n  title: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    marginBottom: 32,\n    textAlign: 'center',\n    color: '#007bff'\n  },\n  input: {\n    backgroundColor: 'white',\n    borderWidth: 1,\n    borderColor: '#ddd',\n    borderRadius: 8,\n    padding: 16,\n    marginBottom: 16,\n    fontSize: 16\n  },\n  button: {\n    backgroundColor: '#007bff',\n    padding: 16,\n    borderRadius: 8,\n    alignItems: 'center',\n    marginTop: 16\n  },\n  buttonDisabled: {\n    backgroundColor: '#ccc'\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  loginButton: {\n    marginTop: 16,\n    padding: 8\n  },\n  loginText: {\n    color: '#007bff',\n    fontSize: 14,\n    textAlign: 'center'\n  }\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}