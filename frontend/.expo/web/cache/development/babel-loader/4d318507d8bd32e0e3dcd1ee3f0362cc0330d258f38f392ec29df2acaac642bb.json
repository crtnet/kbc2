{"ast":null,"code":"import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { useAuth } from \"../contexts/AuthContext\";\nimport LoginScreen from \"../screens/LoginScreen\";\nimport MainScreen from \"../screens/MainScreen\";\nimport RegisterScreen from \"../screens/RegisterScreen\";\nimport { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar AppNavigator = function AppNavigator() {\n  var _useAuth = useAuth(),\n    signed = _useAuth.signed,\n    loading = _useAuth.loading;\n  if (loading) {\n    return null;\n  }\n  return _jsx(NavigationContainer, {\n    children: _jsx(Stack.Navigator, {\n      screenOptions: {\n        headerShown: false,\n        cardStyle: {\n          backgroundColor: '#fff'\n        },\n        gestureEnabled: true,\n        gestureDirection: 'horizontal'\n      },\n      children: !signed ? _jsxs(_Fragment, {\n        children: [_jsx(Stack.Screen, {\n          name: \"Login\",\n          component: LoginScreen,\n          options: {\n            animationTypeForReplace: signed ? 'push' : 'pop'\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Register\",\n          component: RegisterScreen\n        })]\n      }) : _jsx(Stack.Screen, {\n        name: \"Main\",\n        component: MainScreen,\n        options: {\n          animationEnabled: true\n        }\n      })\n    })\n  });\n};\nexport default AppNavigator;","map":{"version":3,"names":["React","NavigationContainer","createStackNavigator","useAuth","LoginScreen","MainScreen","RegisterScreen","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Stack","AppNavigator","_useAuth","signed","loading","children","Navigator","screenOptions","headerShown","cardStyle","backgroundColor","gestureEnabled","gestureDirection","Screen","name","component","options","animationTypeForReplace","animationEnabled"],"sources":["/Users/cassioreistrindade/kbc2/frontend/src/navigation/AppNavigator.tsx"],"sourcesContent":["import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { useAuth } from '../contexts/AuthContext';\nimport LoginScreen from '../screens/LoginScreen';\nimport MainScreen from '../screens/MainScreen';\nimport RegisterScreen from '../screens/RegisterScreen';\n\nexport type RootStackParamList = {\n  Login: undefined;\n  Register: undefined;\n  Main: undefined;\n};\n\nconst Stack = createStackNavigator<RootStackParamList>();\n\nconst AppNavigator = () => {\n  const { signed, loading } = useAuth();\n\n  if (loading) {\n    return null; // ou um componente de loading\n  }\n\n  return (\n    <NavigationContainer>\n      <Stack.Navigator\n        screenOptions={{\n          headerShown: false,\n          cardStyle: { backgroundColor: '#fff' },\n          gestureEnabled: true,\n          gestureDirection: 'horizontal',\n        }}\n      >\n        {!signed ? (\n          <>\n            <Stack.Screen \n              name=\"Login\" \n              component={LoginScreen}\n              options={{\n                animationTypeForReplace: signed ? 'push' : 'pop',\n              }}\n            />\n            <Stack.Screen \n              name=\"Register\" \n              component={RegisterScreen}\n            />\n          </>\n        ) : (\n          <Stack.Screen \n            name=\"Main\" \n            component={MainScreen}\n            options={{\n              animationEnabled: true,\n            }}\n          />\n        )}\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n};\n\nexport default AppNavigator;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,SAASC,OAAO;AAChB,OAAOC,WAAW;AAClB,OAAOC,UAAU;AACjB,OAAOC,cAAc;AAAkC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,QAAA,IAAAC,SAAA,EAAAC,IAAA,IAAAC,KAAA;AAQvD,IAAMC,KAAK,GAAGX,oBAAoB,CAAqB,CAAC;AAExD,IAAMY,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;EACzB,IAAAC,QAAA,GAA4BZ,OAAO,CAAC,CAAC;IAA7Ba,MAAM,GAAAD,QAAA,CAANC,MAAM;IAAEC,OAAO,GAAAF,QAAA,CAAPE,OAAO;EAEvB,IAAIA,OAAO,EAAE;IACX,OAAO,IAAI;EACb;EAEA,OACET,IAAA,CAACP,mBAAmB;IAAAiB,QAAA,EAClBV,IAAA,CAACK,KAAK,CAACM,SAAS;MACdC,aAAa,EAAE;QACbC,WAAW,EAAE,KAAK;QAClBC,SAAS,EAAE;UAAEC,eAAe,EAAE;QAAO,CAAC;QACtCC,cAAc,EAAE,IAAI;QACpBC,gBAAgB,EAAE;MACpB,CAAE;MAAAP,QAAA,EAED,CAACF,MAAM,GACNJ,KAAA,CAAAF,SAAA;QAAAQ,QAAA,GACEV,IAAA,CAACK,KAAK,CAACa,MAAM;UACXC,IAAI,EAAC,OAAO;UACZC,SAAS,EAAExB,WAAY;UACvByB,OAAO,EAAE;YACPC,uBAAuB,EAAEd,MAAM,GAAG,MAAM,GAAG;UAC7C;QAAE,CACH,CAAC,EACFR,IAAA,CAACK,KAAK,CAACa,MAAM;UACXC,IAAI,EAAC,UAAU;UACfC,SAAS,EAAEtB;QAAe,CAC3B,CAAC;MAAA,CACF,CAAC,GAEHE,IAAA,CAACK,KAAK,CAACa,MAAM;QACXC,IAAI,EAAC,MAAM;QACXC,SAAS,EAAEvB,UAAW;QACtBwB,OAAO,EAAE;UACPE,gBAAgB,EAAE;QACpB;MAAE,CACH;IACF,CACc;EAAC,CACC,CAAC;AAE1B,CAAC;AAED,eAAejB,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}