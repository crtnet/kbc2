{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { useTheme } from \"../hooks/useTheme\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var ErrorMessage = function ErrorMessage(_ref) {\n  var message = _ref.message,\n    onRetry = _ref.onRetry;\n  var _useTheme = useTheme(),\n    theme = _useTheme.theme;\n  return _jsxs(View, {\n    style: [styles.container, {\n      backgroundColor: theme.colors.background\n    }],\n    children: [_jsx(MaterialIcons, {\n      name: \"error-outline\",\n      size: 48,\n      color: theme.colors.error\n    }), _jsx(Text, {\n      style: [styles.message, {\n        color: theme.colors.text\n      }],\n      children: message\n    }), onRetry && _jsx(TouchableOpacity, {\n      style: [styles.retryButton, {\n        backgroundColor: theme.colors.primary\n      }],\n      onPress: onRetry,\n      children: _jsx(Text, {\n        style: styles.retryText,\n        children: \"Tentar Novamente\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20\n  },\n  message: {\n    fontSize: 16,\n    textAlign: 'center',\n    marginVertical: 20\n  },\n  retryButton: {\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderRadius: 8,\n    marginTop: 10\n  },\n  retryText: {\n    color: '#FFFFFF',\n    fontSize: 16,\n    fontWeight: '500'\n  }\n});","map":{"version":3,"names":["React","View","Text","TouchableOpacity","StyleSheet","MaterialIcons","useTheme","jsx","_jsx","jsxs","_jsxs","ErrorMessage","_ref","message","onRetry","_useTheme","theme","style","styles","container","backgroundColor","colors","background","children","name","size","color","error","text","retryButton","primary","onPress","retryText","create","flex","justifyContent","alignItems","padding","fontSize","textAlign","marginVertical","paddingHorizontal","paddingVertical","borderRadius","marginTop","fontWeight"],"sources":["/Users/cassioreistrindade/kbc2/frontend/src/components/ErrorMessage.tsx"],"sourcesContent":["import React from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet } from 'react-native';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { useTheme } from '../hooks/useTheme';\n\ninterface ErrorMessageProps {\n  message: string;\n  onRetry?: () => void;\n}\n\nexport const ErrorMessage: React.FC<ErrorMessageProps> = ({ message, onRetry }) => {\n  const { theme } = useTheme();\n\n  return (\n    <View style={[styles.container, { backgroundColor: theme.colors.background }]}>\n      <MaterialIcons name=\"error-outline\" size={48} color={theme.colors.error} />\n      <Text style={[styles.message, { color: theme.colors.text }]}>\n        {message}\n      </Text>\n      {onRetry && (\n        <TouchableOpacity\n          style={[styles.retryButton, { backgroundColor: theme.colors.primary }]}\n          onPress={onRetry}\n        >\n          <Text style={styles.retryText}>Tentar Novamente</Text>\n        </TouchableOpacity>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n  message: {\n    fontSize: 16,\n    textAlign: 'center',\n    marginVertical: 20,\n  },\n  retryButton: {\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderRadius: 8,\n    marginTop: 10,\n  },\n  retryText: {\n    color: '#FFFFFF',\n    fontSize: 16,\n    fontWeight: '500',\n  },\n});"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,UAAA;AAE1B,SAASC,aAAa,QAAQ,oBAAoB;AAClD,SAASC,QAAQ;AAA4B,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAO7C,OAAO,IAAMC,YAAyC,GAAG,SAA5CA,YAAyCA,CAAAC,IAAA,EAA6B;EAAA,IAAvBC,OAAO,GAAAD,IAAA,CAAPC,OAAO;IAAEC,OAAO,GAAAF,IAAA,CAAPE,OAAO;EAC1E,IAAAC,SAAA,GAAkBT,QAAQ,CAAC,CAAC;IAApBU,KAAK,GAAAD,SAAA,CAALC,KAAK;EAEb,OACEN,KAAA,CAACT,IAAI;IAACgB,KAAK,EAAE,CAACC,MAAM,CAACC,SAAS,EAAE;MAAEC,eAAe,EAAEJ,KAAK,CAACK,MAAM,CAACC;IAAW,CAAC,CAAE;IAAAC,QAAA,GAC5Ef,IAAA,CAACH,aAAa;MAACmB,IAAI,EAAC,eAAe;MAACC,IAAI,EAAE,EAAG;MAACC,KAAK,EAAEV,KAAK,CAACK,MAAM,CAACM;IAAM,CAAE,CAAC,EAC3EnB,IAAA,CAACN,IAAI;MAACe,KAAK,EAAE,CAACC,MAAM,CAACL,OAAO,EAAE;QAAEa,KAAK,EAAEV,KAAK,CAACK,MAAM,CAACO;MAAK,CAAC,CAAE;MAAAL,QAAA,EACzDV;IAAO,CACJ,CAAC,EACNC,OAAO,IACNN,IAAA,CAACL,gBAAgB;MACfc,KAAK,EAAE,CAACC,MAAM,CAACW,WAAW,EAAE;QAAET,eAAe,EAAEJ,KAAK,CAACK,MAAM,CAACS;MAAQ,CAAC,CAAE;MACvEC,OAAO,EAAEjB,OAAQ;MAAAS,QAAA,EAEjBf,IAAA,CAACN,IAAI;QAACe,KAAK,EAAEC,MAAM,CAACc,SAAU;QAAAT,QAAA,EAAC;MAAgB,CAAM;IAAC,CACtC,CACnB;EAAA,CACG,CAAC;AAEX,CAAC;AAED,IAAML,MAAM,GAAGd,UAAU,CAAC6B,MAAM,CAAC;EAC/Bd,SAAS,EAAE;IACTe,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBC,OAAO,EAAE;EACX,CAAC;EACDxB,OAAO,EAAE;IACPyB,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE,QAAQ;IACnBC,cAAc,EAAE;EAClB,CAAC;EACDX,WAAW,EAAE;IACXY,iBAAiB,EAAE,EAAE;IACrBC,eAAe,EAAE,EAAE;IACnBC,YAAY,EAAE,CAAC;IACfC,SAAS,EAAE;EACb,CAAC;EACDZ,SAAS,EAAE;IACTN,KAAK,EAAE,SAAS;IAChBY,QAAQ,EAAE,EAAE;IACZO,UAAU,EAAE;EACd;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}